{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQN,EAAAY,OAAOC,QAAQ,uBAAqBV,QAAiBC,QAEnEG,EAAKP,EAAAY,OAAOE,QAAQ,sBAAoBX,QAAeC,UAGlDA,MA7BMW,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAMC,iBACN,MACEC,UAAUhB,MAAEA,EAAKiB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAIC,EAAWC,OAAOrB,EAAMsB,OAE5B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtCH,GAAsBC,OAAOJ,EAAKK,OAClCxB,EAAcyB,EAAGH","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onCreatePromise);\n\nfunction onCreatePromise(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let newDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    newDelay = newDelay + Number(step.value);\n    createPromise(i, newDelay);\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\nreject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n      \n    }, delay);\n  \n    \n  });\n\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","failure","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","newDelay","Number","value","i"],"version":3,"file":"03-promises.21b3c780.js.map"}